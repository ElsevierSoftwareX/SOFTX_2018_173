apply plugin: 'application'

mainClassName = 'io.georocket.GeoRocket'

dependencies {
    compile "io.vertx:vertx-web:$vertxVersion"

    compile 'com.fasterxml:aalto-xml:0.9.11'
    compile 'com.vividsolutions:jts:1.12'
    compile 'javax.media:jai_core:1.1.3'
    compile 'net.java.dev.jna:jna:4.2.0'
    compile 'org.elasticsearch:elasticsearch:2.0.0'
    compile 'org.geotools:gt-epsg-extension:14.0'
    compile 'org.geotools:gt-epsg-hsql:14.0'
    compile 'org.geotools:gt-referencing:14.0'
    compile 'org.mongodb:bson:3.1.0'
}

// customize start scripts
startScripts {
    // customize application name
    applicationName = 'georocketd'
    
    // set GEOROCKET_HOME environment variable
    doLast {
        def windowsScriptFile = file(getWindowsScript())
        def unixScriptFile = file(getUnixScript())
        windowsScriptFile.text = windowsScriptFile.text
            .replaceFirst('set APP_HOME=.*', '$0\r\nset GEOROCKET_HOME=%APP_HOME%')
        unixScriptFile.text = unixScriptFile.text
            .replaceFirst('APP_HOME=.*', '$0\r\nexport GEOROCKET_HOME=\\$APP_HOME')
    }
}

// include 'conf' directory in distribution
distributions {
    main {
        contents {
            from(projectDir) {
                include 'conf/**/*'
            }
        }
    }
}
